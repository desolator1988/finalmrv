{% extends "stage_project.html" %}
{% load core_tags %}

{% block selectmodulejs %}
    <script type="text/javascript">
        $("#measuring-pill").addClass("active");
        $("#measuring-pill a").prop("href", "#");
    </script>
{% endblock selectmodulejs %}


{% block navtabs %}
    <li id="parcel-management-tab" class="active"><a href= "{% url 'parcel-management' request.session.project_id %}"><span class="glyphicon glyphicon-tree-deciduous"></span> 
        Parcel Management</a></li>
    <li id="inventory-planning-tab"><a href="{% url 'inventory-planning' request.session.project_id %}"><span class="glyphicon glyphicon-th-list"></span> 
        Inventory Planning</a></li>
    <li id="data-management-tab"><a href="{% url 'data-management' project.id %}"><span class="glyphicon glyphicon-folder-open"></span> 
        Data Management</a></li>
    <li id="carbon-calculations-tab"><a href="{% url 'carbon-calculations' request.session.project_id %}"><span class="glyphicon glyphicon-globe"></span> 
        Carbon Calculations</a></li>
{% endblock navtabs %}

{% block breadcrumbs %}
    <li><a href="/../measuring/parcel_management/{{ request.session.project_id }}">Measuring</a></li>
    <li><a href="{% url "parcel-management" request.session.project_id %}">Parcel Management</a></li>
    <li class="active">Parcel Plot Management</li>
{% endblock breadcrumbs %}
{% block page_scripts %} <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.4/css/jquery.dataTables.css">{% endblock %}
{% block page_title %}Parcel/Plot Allometric Equations{% endblock page_title %}

{% block page_content %}
    <form id="managePlotsParcel" action="." class="form-horizontal">
    <!--
        Project Panel.

        The project information will be within this panel.
     -->
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">Project</h4>
        </div>
        <div class="panel-body">
            <table class="table table-hover">
                <thead>
                    <th colspan="2">Project Name</th>
                    <th>Allometric Equation</th>
                </thead>
                <tr>
                    <td colspan="2">{{ project.name }}</td>
                    <td>
                        <select id="projectAeqSelect" class="form-control">
                            <option id="" disabled>Select an AEQ</option>
                            {% for eq in equations %}
                                {% if eq.id == project.aeq.id %}
                                    <option value="{{ eq.id }}" id="projAeq{{ eq.id }}" selected="selected">{{ eq.name }}</option>
                                {% endif %}
                                <option value="{{ eq.id }}" id="projAeq{{ eq.id }}">{{ eq.name }}
                            {% endfor %}
                        </select>
                    </td>
                </tr>
            </table>
        </div>
    </div>

    <!-- 
        Parcels Panel.

        All the parcel information will be within this panel.
     -->

    <div class="panel panel-primary" id="parcels">
        <div class="panel-heading">
            <h4 class="panel-title">Parcels</h4>
        </div>
        <div class="panel-body">
            <table class="table table-hover" id="parcelsTable">
                <thead>
                    <th class="col-sm-4">Name</th>
                    <th class="col-sm-4">Rename</th>
                    <th class="col-sm-3">Allometric Equation</th>
                    <th class="col-sm-1">Delete</th>
                </thead>
                <tbody>
                {% for parcel in parcels %}
                    <tr id="{{ parcel.id }}">
                        <td id="{{ parcel.id }}_name" class="col-sm-4">{{ parcel.name }}</td>
                        <td class="col-sm-4"><input type="text" id="renameParcel{{ parcel.id }}" name="renameParcel{{ parcel.id }}" class="form-control renameParcel" /></td>
                        <td class="col-sm-3">
                            <select id="parcelAeqSelect{{ parcel.id }}" class="form-control parcelAeqSelect">
                                <option id="">Inherit from Project</option>
                                {% for eq in equations %}
                                    {% if eq.id == parcel.aeq.id %}
                                        <option value="{{ eq.id }}" id="parcelAeq{{ eq.id }}" selected="selected">{{ eq.name }}</option>
                                    {% else %}                                    
                                         <option value="{{ eq.id }}" id="parcelAeq{{ eq.id }}">{{ eq.name }}</option>
                                    {% endif %}
                                {% endfor %}
                            </select>
                        </td>
                        <td class="col-sm-1">
                            <input type="checkbox" name="deleteParcel{{ parcel.id }}" id="deleteParcel{{ parcel.id }}" />
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div class="panel-footer">
            <div class="col-lg-12" style="text-align:right;">
                <button id="deleteParcels" type="button" class="btn btn-danger btn-sm" onclick="saveParcels()">Delete</button>
                <button id="selectToDeleteParcels" type="button" class="btn btn-info btn-sm">Select All</button>
            </div>
        </div>
    </div>
    <!-- 
        Plots panel. All the plots will be listed in here.
     -->
    <div class="panel panel-primary" id="plots">
        <div class="panel-heading">
            <h4 class="panel-title">Plots</h4>
        </div>
        <div class="panel-body">
            <table class="table table-hover" id="plotsTable">
                <thead>
                    <th class="col-sm-3">Name</th>
                    <th class="col-sm-3">Parcel</th>
                    <th class="col-sm-3">Data</th>
                    <th class="col-sm-3">Allometric Equation</th>
                    <th class="col-sm-1">Delete</th>
                </thead>
                <tbody id="plotsTbody"></tbody>
            </table>
        </div>
        <div class="panel-footer">
            <div class="col-lg-12" style="text-align:right;">
                <button id="deletePlots" type="button" class="btn btn-danger btn-sm" onclick="savePlots()">Delete</button>
                <button id="selectToDeletePlots" type="button" class="btn btn-info btn-sm">Select All</button>
            </div>
        </div>
    </div>

   
        {% csrf_token %}
        <div class="row">
            <div class="col-lg-12" style="text-align:right;">
                <!--<td class="col-sm-1">
                    <a href="{% url "save-parcels-plots" pk=project.id  %}" class="btn btn-primary btn-sm" id="saveChangesAEQ"  type="submit">Saves</a>
                </td>-->
                <!--<a class="btn btn-primary btn-sm" href="{% url "save-parcels-plots" pk=project.id %}">Saved</a>-->
                <!--<a class="btn btn-primary btn-sm" href="{% url "save-parcels-plots" pk=project.id %}">Saves</a>-->
                
                <button class="btn btn-primary btn-sm" id="saveChangesAEQ"  type="submit">Save</button>
            
            </div>
        </div>
   

    <div class="overlay"><div class="spinner spinner--steps icon-spinner" aria-hidden="true"></div></div>
{% endblock %}

{% block page_bottomscripts %}
        <script src="//cdn.datatables.net/1.10.4/js/jquery.dataTables.js"></script>

        <script type="text/javascript">
        function getCookie(name) {
            var cookieValue = null;
            if (document.cookie && document.cookie != '') {
                var cookies = document.cookie.split(';');
                for (var i = 0; i < cookies.length; i++) {
                    var cookie = jQuery.trim(cookies[i]);
                    // Does this cookie string begin with the name we want?
                    if (cookie.substring(0, name.length + 1) == (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }
        function csrfSafeMethod(method) {
            // these HTTP methods do not require CSRF protection
            return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
        }
        function sameOrigin(url) {
            // test that a given url is a same-origin URL
            // url could be relative or scheme relative or absolute
            var host = document.location.host; // host + port
            var protocol = document.location.protocol;
            var sr_origin = '//' + host;
            var origin = protocol + sr_origin;
            // Allow absolute or scheme relative URLs to same origin
            return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||
                (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||
                // or any other URL that isn't scheme relative or absolute i.e relative.
                !(/^(\/\/|http:|https:).*/.test(url));
        }
        var ProjectID = '';
        var myUpdateURL ='';
        plot_ids = new Array();
        $(document).ready(function(){
                /*$('#plotsTable').DataTable({
                    paging: true,
                    scrollY: 400
                });*/
                var plotHtml = '';
                
                getPlots();

                $(".plotAeqSelect").change(function() {
                    $(this).prop("dirty", true);
                });
                
                $(".plotChangeParcel").change(function() {
                    $(this).prop("dirty", true);
                });

                $(".parcelAeqSelect").change(function() {
                    $(this).prop("dirty", true);
                });

                $(".renameParcel").change(function() {
                    $(this).prop("dirty", true);
                });

                $("#projectAeqSelect").change(function() {
                    $(this).prop("dirty", true);
                });

        });
        
        function getPlots(url) {
             ProjectID = '{{ project.id }}'
             myUpdateURL = /getReCalculateCarbon/
            if (url === null || url === undefined)
                url = '/api/v1/plot/?order_by=name&project={{ project.id }}';

            $.ajax({
                type: 'GET',
                url: url,
                async: false,
                success: displayPlots
            });
        }

        function displayPlots(data) {
            $.each(data["objects"], function(v, plot) {
                plot_ids.push(plot["id"]);
                var aeq_url = plot["aeq"]
                var plot_parcel_id = plot["plot__parcel__id"]
                var aeq = 0;
                if (aeq_url != null) {
                    $.ajax({
                        type: 'GET',
                        url: aeq_url,
                        dataType: 'json',
                        async: false,
                        success: function(aeqData) {
                            aeq = aeqData["id"];
                        }
                    });
                }

                var newRow = '';
                newRow += "<tr id='plotRow" + plot["id"] + "' data-parcel-id='" + plot_parcel_id + "'>" +
                                "<td class='col-sm-3'>" + plot["name"] + "</td>" +
                                "<td class='col-sm-3'><select id='plotChangeParcel" + plot["id"] + "' class='form-control plotChangeParcel'>" +
                                "<option value='{{ hiddenparcel.id }}'>{{ hiddenparcel.name }}</option>";
                {% for parc in parcels %}
                    if( {{ parc.id }} == plot["parcel__id"]) {
                        newRow += "<option value='{{ parc.id }}' selected='selected'>{{ parc.name }}</option>"
                    } else {
                        newRow += "<option value='{{ parc.id }}'>{{ parc.name }}</option>"
                    }
                {% endfor %}

                newRow += "</select>" + 
                                //"</td><td class='col-sm-4'>" + "<input type='text' id='renamePlot" + plot["id"] + "' name='renamePlot" + plot["id"] + "' class='form-control' />" + 
                            "</td><td class='col-sm-3'>";
                                
                console.log(plot["has_biomass_data"]);

                if(plot["has_biomass_data"])
                    newRow += '<input type="checkbox" checked="checked" disabled/> Biomass ';
                else
                    newRow += '<input type="checkbox" disabled /> Biomass ';

                if(plot["has_soil_data"])
                    newRow += '<input type="checkbox" checked="checked" disabled/> Soil ';
                else
                    newRow += '<input type="checkbox" disabled /> Soil ';
                newRow += '<br />';
                if(plot["has_litter_data"])
                    newRow += '<input type="checkbox" checked="checked" disabled/> Litter ';
                else
                    newRow += '<input type="checkbox" disabled /> Litter '

                if(plot["has_deadwood_data"])
                    newRow += '<input type="checkbox" checked="checked" disabled/> Deadwood ';
                else
                    newRow += '<input type="checkbox" disabled /> Deadwood ';


                newRow += "</td><td class='col-sm-3'>" + 
                "<select id='plotAeqSelect" + plot["id"] + "' class='form-control plotAeqSelect'>";
                if(aeq == 0)
                {
                    newRow += "<option id='0' selected='selected'>-- Inherited from Parcel --</option>"; 
                }
                else
                {
                    newRow += "<option id='0' >-- Inherited from Parcel --</option>"; 
                }
                                
                {% for eq in equations %}
                    if({{ eq.id }} == aeq)
                    {
                        newRow += "<option id='plotEq{{ eq.id }}' value='{{ eq.id }}' selected='selected'>{{ eq.name }}</option>";
                    }
                    else
                    {
                        newRow += "<option id='plotEq{{ eq.id }}' value='{{ eq.id }}'>{{ eq.name }}</option>";
                    }
                {% endfor %}
                newRow += "</select>" + 
                        "</td><td class-'col-sm-1'>" + "<input type='checkbox' name='deletePlot" + plot["id"] + "' id='deletePlot" + plot["id"] + "' />" + "</td></tr>";

                $('#plotsTbody').append(newRow); 

            });

            if (data['meta']['next'] != null)
                getPlots(data['meta']['next']);
        }
            /*
        function getPlots(url) {
            $.ajax({
                    type: 'GET',
                    url: '/api/v1/plot/?project={{ project.id }}',
                    dataType: 'json',
                    async: false,
                    success: function(data) {
                        var objects = data["objects"]
                        objects.sort(function(a, b) {
                            return a.name.localeCompare(b.name);
                        });
                        $.each(objects, function(v, plot){
                            plot_ids.push(plot["id"])
                            var aeq_url = plot["aeq"];
                            var plot_parcel_id = plot["plot__parcel__id"];
                            var aeq = 0;
                            if(aeq_url != null)
                            {
                                $.ajax({
                                    type: 'GET',
                                    url: aeq_url,
                                    dataType: 'json',
                                    async: false,
                                    success: function(aeqData) {
                                        aeq = aeqData['id'];
                                    }
                                });
                            }
                            console.log(plot);
                            // Create a new row for us to append
                            var newRow = "<tr id='plotRow" + plot["id"] + "' data-parcel-id='" + plot_parcel_id + "'><td class='col-sm-3'>" + plot["name"] + 
                                "</td><td class='col-sm-3'>" + "<select id='plotChangeParcel" + plot["id"] + "' class='form-control plotChangeParcel'>" +
                                "<option value='{{ hiddenparcel.id }}'>{{ hiddenparcel.name }}</option>";
                                {% for parc in parcels %}
                                    if({{ parc.id }} == plot["parcel__id"]) {
                                        newRow = newRow + "<option value='{{ parc.id }}' selected='selected'>{{ parc.name }}</option>"   
                                    }
                                    else
                                    {
                                        newRow += "<option value='{{ parc.id }}'>{{ parc.name }}</option>"
                                    }
                                {% endfor %}
                               



                        });

                    }
                });
        }*/

        $("#selectToDeletePlots").click( function() {
            if ($(this).text() == "Select All")
            {
                for(var i=0; i < plot_ids.length; i++)    
                {
                $("#deletePlot" + plot_ids[i]).prop('checked', true);
                }

                $(this).text("Uncheck All");
                $(this).attr('class', 'btn btn-primary btn-sm');
            }
            else
            {
                for(var i=0; i < plot_ids.length; i++)    
                {
                $("#deletePlot" + plot_ids[i]).prop('checked', false);
                }
                $(this).text("Select All");
                $(this).attr('class', 'btn btn-info btn-sm');
            };
        });



        $("#selectToDeleteParcels").click( function() {
            if ($(this).text() == "Select All")
            {
                {% for parcel in parcels %}
                    $("#deleteParcel{{ parcel.id }}").prop('checked', true);
                {% endfor %}
                $(this).text("Uncheck All");
                $(this).attr('class', 'btn btn-primary btn-sm');
            }
            else
            {
                {% for parcel in parcels %}
                    $("#deleteParcel{{ parcel.id }}").prop('checked', false);
                {% endfor %}
                $(this).text("Select All");
                $(this).attr('class', 'btn btn-info btn-sm');
            };
        });


        $("#managePlotsParcel").on('submit', function(event) {
            event.preventDefault();
            $('.overlay').fadeIn();
            savePlots();
            saveParcels();
            saveProject();
            $('.overlay').fadeOut();
            
            //location.href = "{% url "save-parcels-plots" pk=project.id %}";
            //window.location.reload();

        });


        function hidePlotsFromParcel(parcel_id) {
            $.ajax({
                url: '/api/v1/plot/?parcel=' + parcel_id,
                type: 'GET',
                dataType: 'json',
                success: function(data) {
                    $.each(data["objects"], function(v, plot) {
                        $("#plotRow" + plot["id"]).hide(300);
                    });
                }
            })
        }

        function deletePlot(plot_id){
            $.ajax({
                url: '/api/v1/plot/' + plot_id + '/',
                type: 'DELETE',
                dataType: 'json',
                beforeSend: function(xhr, settings){
                    var csrftoken = getCookie('csrftoken');
                    if ( !csrfSafeMethod(settings.type)) {
                        xhr.setRequestHeader('X-CSRFToken', csrftoken);
                    }
                },
                success: function(data) {
                    $("#plotRow" + plot_id).hide(300);
                }
            });       
        }

        function deleteParcel(parcel_id) {
            hidePlotsFromParcel(parcel_id);   
             $.ajax({
                url: '/api/v1/parcel/' + parcel_id + '/',
                type: 'DELETE',
                dataType: 'json',
                beforeSend: function(xhr, settings){
                    var csrftoken = getCookie('csrftoken');
                    if ( !csrfSafeMethod(settings.type)) {
                        xhr.setRequestHeader('X-CSRFToken', csrftoken);
                    }
                },
                success: function(data) {
                    $("#" + parcel_id).hide(300);
                }
            });


        }


        function applyPlotChanges(plot_id, changedData)
        {
            return $.ajax({
                url: '/api/v1/plot/' + plot_id + '/',
                type: 'PATCH',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(changedData),
                beforeSend: function(xhr, settings) {
                    var csrftoken = getCookie('csrftoken');
                    if ( !csrfSafeMethod(settings.type) ) {
                        xhr.setRequestHeader('X-CSRFToken', csrftoken);
                    }
                },
                complete: function() {
                    var plotRow = $('#plotRow' + plot_id);
                    plotRow.hide(300);
                    plotRow.show(300);
                }
            });
        }

        function applyParcelChanges(parcel_id, changedData)
        {
            return $.ajax({
                url: '/api/v1/parcel/' + parcel_id + '/',
                type: 'PATCH',
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify(changedData),
                parcelid: parcel_id,
                beforeSend: function(xhr, settings) {
                    var csrftoken = getCookie('csrftoken');
                    if ( !csrfSafeMethod(settings.type) ) {
                        xhr.setRequestHeader('X-CSRFToken', csrftoken);
                    }
                },
                complete: function() {
                    var parcelRow = $('#parcelRow' + this.parcelid);
                    parcelRow.hide(300);
                    parcelRow.show(300);
                },
                success: function(data) {
                    var id = this.parcelid;
                    var parcelRow = $('#parcelRow' + this.parcelid);
                    if ( data["name"] != null ) {
                        var oName = $('#' + this.parcelid + '_name');
                        var oRename = $('#renameParcel' + this.parcelid);
                        oName.text(data["name"]);
                        oRename.val("");
                        $(".plotChangeParcel option").each(function() {
                            if ( $(this).val() == id ) {
                                $(this).html(data["name"]);
                            }
                        });
                    }
                    parcelRow.show(300);
                    setTimeout(function() { parcelRow.addClass("success") }, 1000);
                    setTimeout(function() { parcelRow.removeClass("success")}, 2000);
                }
            });
            // var request = new XMLHttpRequest();
            // var csrftoken = getCookie('csrftoken');
            // request.open('PATCH', '/api/v1/parcel/' + parcel_id + '/', false);
            // request.setRequestHeader('Content-type', 'application/json');
            // request.setRequestHeader('X-CSRFToken', csrftoken);
            // request.send(JSON.stringify(changedData));

            // if(request.status === 202)
            // {
            //     var parcelRow = $("#" + parcel_id);
            //     parcelRow.hide();
            //     if(changedData["name"] != null)
            //     {
            //         var oName = $('#' + parcel_id + '_name');
            //         var oRename = $("#renameParcel" + parcel_id);
            //         oName.text(changedData["name"]);
            //         oRename.val("");
            //         $(".plotChangeParcel option").each(function () {
            //             if($(this).val() == parcel_id)
            //             {
            //                 $(this).html(changedData["name"]);
            //             }
            //         });
            //     }
            //     parcelRow.hide(300);
            //     parcelRow.show(300);
            // }           
        }

        function applyProjectChanges(changedData)
        {
            var request = new XMLHttpRequest();
            var csrftoken = getCookie('csrftoken');
            request.open('PATCH', '/api/v1/project/{{ project.id }}/', false);
            request.setRequestHeader('Content-type', 'application/json');
            request.setRequestHeader('X-CSRFToken', csrftoken);
            request.send(JSON.stringify(changedData));

            if(request.status === 204)
            {

            }
        }



        function savePlots() {
            var plotCalls = [];
            var eq3 =''
            for(var i=0; i < plot_ids.length; i++)
            {
                if($("#deletePlot" + plot_ids[i]).prop('checked'))
                {
                    deletePlot(plot_ids[i]);
                }
                else 
                {
                    var changedData = {};
                    var oChangeParcel = $("#plotChangeParcel" + plot_ids[i]);
                    var oChangeAeq = $("#plotAeqSelect" + plot_ids[i]);

                    if(oChangeParcel.prop("dirty"))
                    {
                        if(oChangeParcel.val() == '' || !oChangeParcel.val())
                            changedData["parcel"] = null
                        else
                            changedData["parcel"] = "/api/v1/parcel-with-hidden-no-plots/" + oChangeParcel.val() + "/";
                        oChangeParcel.prop("dirty", false);
                    }

                    if(oChangeAeq.prop("dirty"))
                    {
                        if(oChangeAeq.val() > 0)
                        {
                            changedData["aeq"] = "/api/v1/aeq/" + oChangeAeq.val() + "/";
                            eq3 =oChangeAeq.val();
                        }
                        else
                        {
                            changedData["aeq"] = null;
                        }
                        oChangeAeq.prop("dirty", false);
                    }
                    
                    if(JSON.stringify(changedData) != "{}")
                    {
                        console.log("changed data: " + JSON.stringify(changedData));
                        var id = '3N' + plot_ids[i] + 'N' + eq3.trim();
                        var  k = myUpdateURL + '?id=' + id;
                        updateCarbonPlot(k, plotCalls, plot_ids[i], changedData);                       
                        
                    }
                }

            }
        }

        function saveParcels() {
            var parcelCalls = [];
            var eq2 ='';
            {% for parcel in parcels %}
                if($("#deleteParcel" + {{ parcel.id }}).prop('checked'))
                {
                    deleteParcel({{ parcel.id }});
                }
                else 
                {
                    var changedData = {}
                    var oRename = $("#renameParcel{{ parcel.id }}");
                    var oChangeAeq = $("#parcelAeqSelect{{ parcel.id }}");

                    if(oRename.val() != '' && oRename.prop("dirty"))
                    {
                        changedData["name"] = oRename.val();
                        oRename.prop("dirty", false);
                    }

                    if(oChangeAeq.prop("dirty"))
                    {
                        if(oChangeAeq.val() > 0)
                        {
                            changedData["aeq"] = "/api/v1/aeq/" + oChangeAeq.val() + "/";
                            var eq2 =oChangeAeq.val();
                        }
                        else
                        {
                            changedData["aeq"] = null;
                        }
                        oChangeAeq.prop("dirty", false);
                    }

                    if(JSON.stringify(changedData) != "{}")
                    {
                        console.log("changed parcel data: " + JSON.stringify(changedData));                        
                        var id = '2N' + {{ parcel.id }} + 'N' + eq2.trim();
                        var  k = myUpdateURL + '?id=' + id;
                        updateCarbonParcel(k, parcelCalls, {{ parcel.id }}, changedData); 
                    }

                }               
            {% endfor %}
        }

        function saveProject() {
            var eq1 ='';
            var changedData = {}
            var oChangeAeq = $("#projectAeqSelect");
            var eq1 =''
            if(oChangeAeq.prop("dirty"))
            {
                changedData["aeq"] = "/api/v1/aeq/" + oChangeAeq.val() + "/";
                oChangeAeq.prop("dirty", false);
                eq1 = oChangeAeq.val();
            }

            if(JSON.stringify(changedData) != "{}")
            {
                console.log("changed project data: " + JSON.stringify(changedData));
                var id = '1N' + ProjectID + 'N' + eq1.trim();
                        var  k = myUpdateURL + '?id=' + id;
                        updateCarbonProject(k, changedData);               
            }                        
        }
        function updateCarbonPlot(myUrl, plotCalls, plot_ids, changedData) {
           $.get(myUrl, function(data, status){
                  plotCalls.push(applyPlotChanges(plot_ids, changedData));
		  var J =6;
             });                          
        }
        function updateCarbonParcel(myUrl, parcelCalls, parcel_ids, changedData) {
           $.get(myUrl, function(data, status){
                  parcelCalls.push(applyParcelChanges(parcel_ids, changedData));
		  var J =6;
             });                          
        }
        function updateCarbonProject(myUrl,changedData) {
           $.get(myUrl, function(data, status){
                   applyProjectChanges(changedData);                 
		   var J =6;
             });                          
        }

    </script>


{% endblock %}
